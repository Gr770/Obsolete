### DYNASTY HOUSE WINDOW
window = {
	name = "dynasty_house_view"
	widgetid = "dynasty_house_view"
	datacontext = "[DynastyHouseView.GetDynastyHouse]"
	datacontext = "[DynastyHouse.GetDynasty]"
	movable = no
	allow_outside = yes
	layer = windows_layer

	using = Window_Size_Sidebar
	using = Window_Background_Sidebar

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		position_x = 0
		on_start = "[GetVariableSystem.Set( 'hide_bottom_left_HUD', 'true' )]"
	}

	state = {
		name = _hide

		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		position_x = -60
		on_start = "[GetVariableSystem.Clear( 'hide_bottom_left_HUD' )]"
	}

	vbox = {
		name = "dynasty_house"

		using = Window_Margins_Sidebar

		background = {
			using = Background_Bottom_Fade
			margin_right = -10
		}

		### HOUSE ###
		vbox = {
			layoutpolicy_horizontal = expanding

			#### HEADER
			hbox = {
				layoutpolicy_horizontal = expanding
				background = {
					texture = "gfx/interface/component_tiles/tile_title_big_top_01.dds"
					spriteType = Corneredtiled
					spriteborder = { 0 18 }
					margin_bottom = 10
					texture_density = 2

					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_title_big_top.dds"
						spriteType = Corneredtiled
						spriteborder = { 160 0 }
						blend_mode = alphamultiply
						alpha = 0.5
					}

					modify_texture = {
						name = "overlay"
						texture = "gfx/interface/component_overlay/overlay_title_big_top.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
					}
				}

				vbox = {
					layoutpolicy_vertical = expanding
					margin = { 5 0 }

					coa_house_huge = {
						state = {
							name = "house_view_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}

						blockoverride "coa_button"
						{
							alwaystransparent = yes
						}

						tooltipwidget = {
							using = dynasty_house_tooltip
						}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 10

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed

							text_multi = {
								layoutpolicy_vertical = expanding
								text = "HOUSE_VIEW_NAME_WITH_HOUSE"
								maximumsize = { 0 100 }
								margin_top = 10
								max_width = 280
								autoresize = yes
								fontsize_min = 14
								align = left
								using = Font_Type_Flavor
								using = Font_Size_Big
								default_format = "#high"

								state = {
									name = "house_view_refresh"
									using = Animation_Refresh_FadeOut
								}

								state = {
									using = Animation_Refresh_FadeIn
								}
							}

							spacer = {
								size = { 5 0 }
							}

							button_edit_text = {
								visible = "[DynastyHouseView.CanRenameHouse]"
								onclick = "[DynastyHouseView.RenameHouse]"
								tooltip = "EDIT_HOUSE_NAME"
							}

							expand = {}

							buttons_window_control = {

								blockoverride "button_close"
								{
									onclick = "[DynastyHouseView.Close]"
									onclick = "[DynastyHouseView.CloseMembersWindow]"
								}

								blockoverride "button_back"
								{
									visible = "[HasViewHistory]"
									onclick = "[OpenFromViewHistory]"
									tooltip = "[GetViewHistoryTooltip]"
								}

								blockoverride "button_me"
								{
									onclick = "[DefaultOnCharacterClick(GetPlayer.GetID)]"
								}
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin_bottom = 10
							margin_right = 25
							spacing = 3

							state = {
								name = "house_view_refresh"
								using = Animation_Refresh_FadeOut
							}

							state = {
								using = Animation_Refresh_FadeIn
							}

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "HOUSE_VIEW_CONCEPT"
								autoresize = no
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									layoutpolicy_horizontal = expanding
									maximumsize = { 0 40 }
									max_width = 400
									autoresize = yes
									text = "HOUSE_VIEW_MOTTO"
									fontsize = 17
									default_format = "#medium;bold;italic"
								}

								expand = {}
							}

							expand = {}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									layoutpolicy_horizontal = expanding
									text = "HOUSE_VIEW_FOUNDED"
									default_format = "#low"
									autoresize = yes
									max_width = 400
								}
								expand = {}
							}
						}
					}
				}
			}

			### INVALID ###
			vbox = {
				layoutpolicy_horizontal = expanding
				datacontext = "[DynastyHouse.GetFounder]"
				visible = "[Not( DynastyHouse.GetHeadOfHouse.IsValid )]"
				margin = { 15 0 }
				minimumsize = { 0 260 }

				datacontext = "[GetIllustration( 'character_view_bg' )]"

				state = {
					name = "house_view_refresh"
					using = Animation_Refresh_FadeOut
				}

				state = {
					using = Animation_Refresh_FadeIn
				}

				background = {
					visible = "[Character.IsValid]"
					texture = "[Illustration.GetTexture( Character.Self )]"
					alpha = 0.5
					fittype = centercrop
					using = Mask_Rough_Edges
					margin_top = 10

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
						blend_mode = alphamultiply
					}
				}

				spacer = {
					size = { 100 100 }
				}

				expand = {}

				text_label_center = {
					layoutpolicy_horizontal = expanding
					text = "DYNASTY_TT_DEAD_HOUSE"
					max_width = 370
				}

				expand = {}
			}

			#### VALID ####
			vbox = {
				layoutpolicy_horizontal = expanding
				datacontext = "[DynastyHouse.GetHeadOfHouse]"
				datacontext = "[GetIllustration( 'character_view_bg' )]"
				visible = "[DynastyHouse.GetHeadOfHouse.IsValid]"

				state = {
					name = "house_view_refresh"
					using = Animation_Refresh_FadeOut
				}

				state = {
					using = Animation_Refresh_FadeIn
				}

				background = {
					texture = "[Illustration.GetTexture( Character.Self )]"
					alpha = 0.6
					fittype = centercrop
					margin_top = 120

					using = Mask_Rough_Edges

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
						blend_mode = alphamultiply
					}

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_extended_2.dds"
						blend_mode = alphamultiply
						spritetype = corneredstretched
						spriteborder_right = 190
						alpha = 0.9
					}
				}

				expand = {}

				hbox = {
					margin = { 10 2 }
					margin_top = 10
					layoutpolicy_horizontal = expanding

					vbox = {
						layoutpolicy_horizontal = expanding

						vbox = {
							layoutpolicy_horizontal = expanding
							margin_bottom = 5
							spacing = 0

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_left = 5

								text_label_center = {
									text = "DH_UNIUI_CHAR_NAME"
									default_format = "#high"
									using = Font_Size_Medium
									max_width = 355
								}

								expand = {}
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_left = 5

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "[Character.GetRelationToString( GetPlayer )]"
									max_width = 400
								}

								expand = {}
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin = { 0 5 }
							margin_right = 20

							divider_light = {
								layoutpolicy_horizontal = expanding
							}
						}

						### House Head
						vbox = {
							layoutpolicy_horizontal = expanding

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 5

								icon = {
									size = { 20 20 }
									alwaystransparent = yes

									texture = "gfx/interface/icons/portraits/relation_small.dds"
									framesize = { 28 28 }
									frame = "1"
								}

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "HOUSE_VIEW_HOUSE_HEAD_OF"
									autoresize = no
									max_width = 360
									default_format = "#high"
									align = nobaseline
								}

								expand = {}
							}

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "HOUSE_VIEW_MAX_MILITARY_STRENGTH"
								autoresize = no
								margin_left = 25
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_left = 25

								text_multi = {
									visible = "[DynastyHouse.HasHeirOfHouse]"
									datacontext = "[DynastyHouse.GetHeirOfHouse]"

									text = "HOUSE_HEAD_HEIR"
									max_width = 360
									autoresize = yes
								}

								expand = {}
							}
						}

						spacer = {
							visible = "[Character.IsDynast]"
							size = { 10 10 }
						}

						### Dynasty Head
						vbox = {
							layoutpolicy_horizontal = expanding
							visible = "[Character.IsDynast]"

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 5

								icon = {
									size = { 20 20 }
									alwaystransparent = yes

									texture = "gfx/interface/icons/portraits/relation_small.dds"
									framesize = { 28 28 }
									frame = "8"
								}

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "DYNASTY_VIEW_DYNAST_OF"
									autoresize = no
									max_width = 360
									default_format = "#high"
									align = nobaseline
								}

								expand = {}
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_left = 25

								text_multi = {
									visible = "[NotEqualTo_int32(Character.GetDynasty.GetFoundedDynastyHousesCount, '(int32)1')]"
									text = "DYNASTY_VIEW_BECOME_DYNAST"
									default_format = "#weak"
									max_width = 360
									autoresize = yes
								}

								expand = {}
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_left = 25

								text_multi = {
									layoutpolicy_horizontal = expanding
									visible = "[EqualTo_int32(Character.GetDynasty.GetFoundedDynastyHousesCount, '(int32)1')]"
									text = "DYNASTY_VIEW_BECOME_DYNAST_ONE_HOUSE"
									default_format = "#weak"
									max_width = 360
									autoresize = yes
								}
								expand = {}
							}
						}
					}

					vbox = {
						layoutpolicy_vertical = expanding

						portrait_torso = {
							name = "head_of_house_portrait"
							datacontext = "[GetIllustration( 'character_view_bg' )]"
							visible = "[DynastyHouse.HasHeadOfHouse]"

							blockoverride "status_icons" {}
							blockoverride "coa" {}

							blockoverride "portrait_button" {
								# portrait_texture = "[Character.GetPortrait(Illustration.GetEnvironment(Character.Self), 'camera_torso', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
								# mask = "gfx/portraits/portrait_mask_council.dds"
							}
						}
					}
				}
			}

			#### MODIFIERS ####
			hbox = {
				visible = "[DataModelHasItems( DynastyHouseView.GetHouseModifiers )]"
				layoutpolicy_horizontal = expanding
				minimumsize = { 0 38 }
				margin = { 15 7 }
				spacing = 5
			

				background = {
					using = Background_Area_Dark
					alpha = 0.8
					margin = { 0 2 }
				}

				text_single = {
					text = "HOUSE_MODIFIERS"
					align = nobaseline
				}

				hbox = {
					datamodel = "[DynastyHouseView.GetHouseModifiers]"

					item = {
						icon = {
							size = { 25 25 }
							alwaystransparent = no
							texture = "[ModifierItem.GetIcon]"
							tooltip = "[ModifierItem.GetTooltip]"
						}
					}
				}

				expand = {}
			}
		}

		### DYNASTY
		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			background = {
				using = Background_Tab_Area
				mirror = vertical
			}

			background = {
				using = Background_Area
				alpha = 0.5
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				margin = {  0 5 }
				margin_top = 10
				margin_left = 15
				margin_right = 10

				background = {
					texture = "gfx/interface/component_tiles/tile_title_big_top_01.dds"
					margin_bottom = 10
					spriteType = Corneredtiled
					spriteborder = { 0 18 }
					texture_density = 2

					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_title_big_top.dds"
						spriteType = Corneredtiled
						spriteborder = { 160 0 }
						blend_mode = alphamultiply
						alpha = 0.5
					}

					modify_texture = {
						name = "overlay"
						texture = "gfx/interface/component_overlay/overlay_title_big_top.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin_top = 5

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						hbox = {
							layoutpolicy_horizontal = expanding

							#### TEXT ###
							vbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								spacing = 3

								hbox = {
									layoutpolicy_horizontal = expanding
									margin_bottom = 5
									margin_right = 5

									vbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										hbox = {
											layoutpolicy_horizontal = expanding
											spacing = 5

											text_multi = {
												text = "HOUSE_VIEW_PART_OF_DYNASTY"
												autoresize = yes
												maximumsize = { 0 60 }
												max_width = 390
												using = Font_Type_Flavor
												using = Font_Size_Big
												default_format = "#high"
											}

											button_edit_text = {
												visible = "[DynastyHouseView.CanRenameDynasty]"
												onclick = "[DynastyHouseView.RenameDynasty]"
												tooltip = "EDIT_DYNASTY_NAME"
											}

											expand = {}
										}

										text_single = {
											layoutpolicy_horizontal = expanding
											text = "DYNASTY_VIEW_CONCEPT"
											max_width = 440
											align = left
										}

										text_single = {
											visible = "[Dynasty.GetDynast.IsValid]"
											layoutpolicy_horizontal = expanding
											text = "DYNASTY_TT_DYNAST"
											default_format = "#low"
											autoresize = no
											max_width = 440
											align = left
										}

										text_single = {
											visible = "[Not( Dynasty.GetDynast.IsValid )]"
											layoutpolicy_horizontal = expanding
											text = "DYNASTY_TT_DEAD_DYNASTY"
											default_format = "#low"
											autoresize = no
											max_width = 440
											align = left
										}

										expand = {}

										text_single = {
											layoutpolicy_horizontal = expanding
											text = "[Dynasty.GetPrestigeLevelName]"
											using = Font_Size_Medium
											default_format = "#high"
										}
									}

									vbox = {
										layoutpolicy_vertical = expanding
										margin_bottom = -5

										coa_dynasty_big = {

											blockoverride "coa_button"
											{
												alwaystransparent = yes
											}

											tooltipwidget = {
												using = DynastyTooltip
											}
										}

										expand = {}
									}
								}

								hbox = {
									layoutpolicy_horizontal = expanding
									margin = { -2 0 }

									progressbar_standard = {
										layoutpolicy_horizontal = expanding
										size = { -1 30 }

										value = "[Dynasty.GetPrestigeLevelProgress]"
										tooltip = "[Dynasty.GetPrestigeLevelProgressTooltip]"
									}
								}

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "HOUSE_VIEW_DYNASTY_PRESTIGE"
									align = nobaseline
								}
							}
						}

						expand = {}
					}
				}

				expand = {
					minimumsize = { 0 15 }
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = { 0 54 }

					### DYNASTY TREE ###
					button_standard_clean = {
						tooltip = "DYNASTY_VIEW_TT_DYNASTY_TREE"
						onclick = "[OpenDynastyTreeViewFromCharacter( DynastyHouse.GetHeadOfHouse.GetID )]"
						size = { 300 42 }

						button_dynasty_tree = {
							alwaystransparent = yes
							position = { 10 0 }
							parentanchor = left|vcenter
						}

						text_label_center = {
							name = "legacies"
							text = "DYNASTY_VIEW_DYNASTY_TREE"
							parentanchor = center
							align = center
							default_format = "#clickable"
						}

						background = {
							texture = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
							fittype = centercrop
							scissor = yes
							alpha = 0.4
						}

						background = {
							texture = "gfx/interface/component_tiles/tile_vignette_3px.dds"
							spriteType = Corneredtiled
							spriteborder = { 5 5 }
							margin = { -2 -2 }
							texture_density = 2
						}
					}

					expand = {}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						hbox = {
							layoutpolicy_horizontal = expanding

							expand = {}

							button_sidepanel_right = {
								onclick = "[DynastyHouseView.ToggleMembersWindow('dynasty')]"
								tooltip = "DYNASTY_VIEW_MEMBERS_TT"
								blockoverride "button_text"
								{
									text = "DYNASTY_VIEW_MEMBERS"
								}
							}
						}

						hbox = {
							visible = "[GreaterThan_int32( GetDataModelSize( Dynasty.GetDynastyHouses ), '(int32)1' )]"
							layoutpolicy_horizontal = expanding

							expand = {}

							button_sidepanel_right = {
								visible = "[GetVariableSystem.HasValue( 'dynasty_view_expand', 'houses' )]"
								onclick = "[GetVariableSystem.Set( 'dynasty_view_expand', 'none' )]"
								tooltip = "DYNASTY_VIEW_HOUSES_TT"

								blockoverride "button_text"
								{
									text = "DYNASTY_VIEW_HOUSES_AMOUNT"
								}
							}

							button_sidepanel_right = {
								visible = "[Not(GetVariableSystem.HasValue( 'dynasty_view_expand', 'houses' ))]"
								onclick = "[GetVariableSystem.Set( 'dynasty_view_expand', 'houses' )]"
								tooltip = "DYNASTY_VIEW_HOUSES_TT"

								blockoverride "button_text"
								{
									text = "DYNASTY_VIEW_HOUSES_AMOUNT"
								}
							}
						}
					}
				}
			}

			### MODIFIERS ###
			hbox = {
				visible = "[DataModelHasItems( DynastyHouseView.GetDynastyModifiers )]"
				layoutpolicy_horizontal = expanding
				minimumsize = { 0 38 }
				margin = { 15 5 }
				spacing = 5

				background = {
					using = Background_Area_Dark
					alpha = 0.8
					margin = { 0 2 }
				}

				text_single = {
					text =  "DYNASTY_MODIFIERS"
					align = nobaseline
				}

				hbox = {
					name = "dynasty modifiers"
					datamodel = "[DynastyHouseView.GetDynastyModifiers]"

					item = {
						icon = {
							size = { 25 25 }
							alwaystransparent = no
							texture = "[ModifierItem.GetIcon]"
							tooltip = "[ModifierItem.GetTooltip]"
						}
					}
				}

				expand = {}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 10 0 }

				divider_light = {
					layoutpolicy_horizontal = expanding
					alpha = 0.4
				}
			}

			### LEGACY ###
			vbox = {
				datacontext = "[DynastyHouse.GetDynasty]"
				datacontext = "[DynastyHouseView.GetTopLegacy]"
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				margin = { 10 0 }
				minimumsize = { 0 400 }
				spacing = 2

				background = {
					texture = "[DynastyLegacyItem.GetLegacy.GetTrackIcon]"
					tintcolor = { 0.6 0.6 0.6 0.7 }
					alpha = 0.5
					fittype = end
					using = Mask_Rough_Edges
					framesize = { 826 368 }
					frame = 3

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
						blend_mode = alphamultiply
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 5 0 }
					margin_right = 10
					margin_top = 5
					spacing = 3

					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 3

						hbox = {
							layoutpolicy_horizontal = expanding

							text_label_left = {
								text = "DYNASTY_HOUSE_VIEW_PROGRESS_LABEL"
								default_format = "#high"
							}

							expand = {}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_left = -5

							progressbar_standard = {
								layoutpolicy_horizontal = expanding
								name = "progress"
								maximumsize = { 300 12 }
								value = "[FixedPointToProgressbarValue(Dynasty.GetNextPerkProgress)]"
								min = 0
								tooltip = "DYNASTY_HOUSE_VIEW_PROGRESS_TOOLTIP"
							}

							expand = {}
						}
					}

					expand = {
						layoutpolicy_horizontal = expanding
					}

					icon = {
						size = { 40 40 }
						texture = "[GetPlayer.GetDynasty.GetDynastyPrestigeLevelTexture]"
					}

					text_single = {
						text = "DYNASTY_VIEW_PRESTIGE"
						default_format = "#low"
					}
				}

				vbox = {
					name = "tutorial_highlight_dynasty_perks_button"
					layoutpolicy_horizontal = expanding
					spacing = 5
				}

				vbox = {
					datacontext = "[DynastyHouse.GetDynasty]"
					layoutpolicy_horizontal = expanding
					size = { 0 154 }
					spacing = 10
					margin = { 0 5 }

					widget = {
						layoutpolicy_horizontal = expanding
						size = { 0 100 }
						scissor = yes

						dynamicgridbox = {
							datamodel = "[DynastyHouseView.GetLegacies]"
							datamodel_wrap = 4
							flipdirection = yes
							parentanchor = top|hcenter
							size = { 0 154 }

							item = {
								widget = {
									size = { 120 100 }
									layoutpolicy_horizontal = growing
									tooltip = "[DynastyLegacyItem.GetTooltip]"

									widget_legacy_icon = {}

									widget = {
										parentanchor = bottom|hcenter
										position = { 0 -15 }
										allow_outside = yes
										layoutpolicy_horizontal = growing

										flowcontainer = {
											name = "progress_none"
											spacing = 2
											parentanchor = center

											legacy_progress_none = {}
											legacy_progress_none = {}
											legacy_progress_none = {}
											legacy_progress_none = {}
											legacy_progress_none = {}
										}

										flowcontainer = {
											name = "progress"
											spacing = 2
											parentanchor = center

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)1')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)2')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)3')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)4')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)5')]"
											}
										}
									}
								}
							}
						}
					}

					widget = {
						visible = "[Not(GreaterThan_int32(GetDataModelSize(DynastyHouseView.GetLegacies), '(int32)7'))]"
						size = { 360 100 }
						scissor = yes
						#using = debug_square

						dynamicgridbox = {
							datamodel = "[DynastyHouseView.GetLegacies]"
							flipdirection = yes
							parentanchor = bottom
							position = { -480 0 }
							size = { 0 154 }

							item = {
								widget = {
									size = { 120 100 }
									layoutpolicy_horizontal = growing
									tooltip = "[DynastyLegacyItem.GetTooltip]"

									widget_legacy_icon = {}

									widget = {
										parentanchor = bottom|hcenter
										position = { 0 -15 }
										allow_outside = yes
										layoutpolicy_horizontal = growing

										flowcontainer = {
											name = "progress_none"
											spacing = 2
											parentanchor = center

											legacy_progress_none = {}
											legacy_progress_none = {}
											legacy_progress_none = {}
											legacy_progress_none = {}
											legacy_progress_none = {}
										}

										flowcontainer = {
											name = "progress"
											spacing = 2
											parentanchor = center

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)1')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)2')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)3')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)4')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)5')]"
											}
										}
									}
								}
							}
						}
					}

					widget = {
						visible = "[GreaterThan_int32(GetDataModelSize(DynastyHouseView.GetLegacies), '(int32)7')]"
						size = { 550 100 }
						scissor = yes

						dynamicgridbox = {
							datamodel = "[DynastyHouseView.GetLegacies]"
							flipdirection = yes
							parentanchor = bottom
							position = { -440 0 }
							size = { 0 154 }

							item = {
								widget = {
									size = { 110 100 }
									layoutpolicy_horizontal = growing
									tooltip = "[DynastyLegacyItem.GetTooltip]"

									widget_legacy_icon = {}

									widget = {
										parentanchor = bottom|hcenter
										position = { 0 -15 }
										allow_outside = yes
										layoutpolicy_horizontal = growing

										flowcontainer = {
											name = "progress_none"
											spacing = 2
											parentanchor = center

											legacy_progress_none = {}
											legacy_progress_none = {}
											legacy_progress_none = {}
											legacy_progress_none = {}
											legacy_progress_none = {}
										}

										flowcontainer = {
											name = "progress"
											spacing = 2
											parentanchor = center

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)1')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)2')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)3')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)4')]"
											}

											legacy_progress = {
												visible = "[GreaterThanOrEqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)5')]"
											}
										}
									}
								}
							}
						}

					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 125 3 }
					margin_top = 10

					button_standard_clean = {
						name = "top_legacy"
						layoutpolicy_horizontal = expanding
						size = { -1 33 }
						datacontext = "[DynastyHouseView.GetTopLegacy]"

						onclick = "[DefaultOnDynastyCoatOfArmsClick(Dynasty.GetID)]"
						tooltip = "HOUSE_VIEW_SHOW_DYNASTY_TT"

						widget = {
							size = { 100% 100% }
							scissor = yes

							background = {
								visible = "[EqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)0')]"
								texture = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
								fittype = centercrop
								tintcolor = { 0.6 0.6 0.6 0.7 }
								using = Mask_Rough_Edges
							}

							background = {
								visible = "[GreaterThan_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)0')]"
								texture = "[DynastyLegacyItem.GetLegacy.GetTrackIcon]"
								alwaystransparent = yes
								fittype = centercrop
								tintcolor = { 0.6 0.6 0.6 0.7 }
								using = Mask_Rough_Edges
							}
						}

						background = {
							texture = "gfx/interface/component_tiles/tile_vignette_3px.dds"
							spriteType = Corneredtiled
							spriteborder = { 5 5 }
							margin = { -2 -2 }
							texture_density = 2
						}

						text_label_center = {
							name = "legacies"
							text = "HOUSE_VIEW_SHOW_LEGACIES"
							parentanchor = center
							align = center
							default_format = "#clickable"
						}
					}
				}

				expand = {
					layoutpolicy_vertical = expanding
				}
			}
		}
	}

	window = {
		name = "houses_list"
		position = { 600 60 }
		size = { 580 90% }
		movable = yes
		resizable = no
		focuspolicy = click
		visible = "[GetVariableSystem.HasValue( 'dynasty_view_expand', 'houses' )]"
		datacontext = "[DynastyHouseView.GetDynastyHouse.GetDynasty]"

		attachto = {
			widgetid = "dynasty_house_view"
			inherit_visibility = no
		}

		using = Window_Background
		using = Window_Decoration

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			position_x = 600
			on_start = "[GetVariableSystem.Set( 'houses_list_open', 'true'  )]"
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			position_x = 580
			on_start = "[GetVariableSystem.Clear( 'houses_list_open' )]"
		}

		vbox = {
			using = Window_Margins

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "DYNASTY_VIEW_HOUSES"
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Set( 'dynasty_view_expand', 'none' )]"
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin_left = 10
				margin_right = 20
				margin_top = 5
				spacing = 5

				dropdown_menu_standard =
				{
					blockoverride "dropdown_properties"
					{
						datamodel = "[DynastyHouseView.GetOrderOptions]"
						onselectionchanged = "[DynastyHouseView.SortHouses]"
						selectedindex = "[DynastyHouseView.GetSortSelectedIndex]"
					}

					blockoverride "dropdown_active_item_properties"
					{
						text = "[HouseOrderOption.GetName]"
					}

					blockoverride "dropdown_item_properties"
					{
						text = "[HouseOrderOption.GetName]"
					}

				}

				expand = {}
			}

			scrollbox = {
				name = "houses"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_content"
				{
					vbox = {
						layoutpolicy_horizontal = expanding
						datamodel = "[DynastyHouseView.GetDynastyHouses]"

						item = {
							button_standard_hover = {
								visible = "[DynastyHouse.HasBeenFounded]"
								layoutpolicy_horizontal = expanding
								size = { 0 120 }

								onclick = "[PdxGuiTriggerAllAnimations('house_view_refresh')]"
								onclick = "[DefaultOnHouseCoatOfArmsClick(DynastyHouse.GetID)]"

								vbox = {
									hbox = {
										layoutpolicy_horizontal = expanding
										spacing = 10
										margin = { 5 10 }

										coa_house_medium = {}

										vbox = {
											layoutpolicy_horizontal = expanding

											hbox = {
												layoutpolicy_horizontal = expanding

												text_single = {
													layoutpolicy_horizontal = expanding
													text = "[DynastyHouse.GetBaseNameNoTooltip]"
													default_format = "#high"
													align = nobaseline
													fontsize_min = 14
													autoresize = no
													using = Font_Size_Medium
												}

												expand = {}

												text_single = {
													visible = "[DynastyHouse.IsFoundingHouse]"
													text = "HOUSE_LIST_FOUNDING"
													default_format = "#weak"
													align = nobaseline
												}

												text_single = {
													visible = "[Not(DynastyHouse.IsFoundingHouse)]"
													text = "HOUSE_LIST_CADET"
													align = nobaseline
												}
											}

											text_single = {
												layoutpolicy_horizontal = expanding
												text = HOUSE_LIST_HEAD
												max_width = 375
												fontsize_min = 14
												align = nobaseline
											}

											spacer = {
												size = { 10 10 }
											}

											text_single = {
												layoutpolicy_horizontal = expanding
												text = "HOUSE_LIST_MEMBERS"
											}

											hbox = {
												layoutpolicy_horizontal = expanding

												text_single = {
													layoutpolicy_horizontal = expanding
													text = "HOUSE_LIST_FOUNDATION"
													default_format = "#weak"
												}
												text_single = {
													text = "HOUSE_LIST_HEAD_MAX_MILITARY_STRENGTH"
													tooltip = "HOUSE_LIST_MILITARY_STRENGTH_TT"
													align = right
												}
											}
										}
									}

									divider_light = {
										layoutpolicy_horizontal = expanding
										minimumsize = { 0 3 }
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

types DynastyView
{
	type widget_legacy_icon = widget {
		size = { 100% 100% }

		background = {
			texture = "gfx/interface/icons/lifestyle_tree_backgrounds/temptation.dds"
			tintcolor = { 0.2 0.2 0.2 1 }

			using = Mask_Rough_Edges
			alpha = 0.8
			fittype = centercrop
			mirror = horizontal

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_circle.dds"
				blend_mode = alphamultiply
			}
		}

		background = {
			texture = "gfx/interface/icons/lifestyle_tree_backgrounds/temptation.dds"
			tintcolor = { 1 0.9 1 0.15 }

			using = Mask_Rough_Edges
			fittype = centercrop
			mirror = horizontal
			margin_right = 10
			margin_top = 20

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_circle.dds"
				blend_mode = alphamultiply
			}
		}

		# background = {
		# 	texture = "gfx/interface/component_masks/mask_rough_edges.dds"
		# 	spriteborder = { 20 20 }
		# 	color = { 0 0 0 0.6 }
		# 	alpha = 0.8

		# 	modify_texture = {
		# 		texture = "gfx/interface/component_masks/mask_fade_circle.dds"
		# 		blend_mode = alphamultiply
		# 	}
		# }

		# background = {
		# 	texture ="gfx/interface/component_masks/patterns/mask_pattern_02.dds"
		# 	spriteType = Corneredtiled
		# 	alpha = 0.4
		# 	using = Color_Blue
		# 	margin = { 15 15 }

		# 	modify_texture = {
		# 		texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
		# 		blend_mode = alphamultiply
		# 	}

		# 	modify_texture = {
		# 		texture = "gfx/interface/component_masks/mask_fade_circle.dds"
		# 		blend_mode = alphamultiply
		# 	}
		# }

		icon_flat_standard = {
			size = { 80 80 }
			parentanchor = top|hcenter
			visible = "[GreaterThan_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)0')]"
			texture = "[DynastyLegacyItem.GetLegacy.GetIcon]"
			alwaystransparent = yes
		}

		icon_flat_standard = {
			size = { 80 80 }
			parentanchor = top|hcenter
			visible = "[EqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)5')]"
			texture = "[DynastyLegacyItem.GetLegacy.GetIcon]"
			alwaystransparent = yes
		}

		icon_flat_standard = {
			visible = "[EqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)0')]"
			size = { 80 80 }
			parentanchor = top|hcenter
			texture = "[DynastyLegacyItem.GetLegacy.GetIcon]"
			alwaystransparent = yes
			blockoverride "master_color_frame" {
				frame = 6
			}
		}
	}

	type legacy_progress_none = icon {
		texture = "gfx/interface/progressbars/progress_scheme.dds"
		size = { 14 14 }
		framesize = { 45 45 }
	}

	type legacy_progress = icon {
		texture = "gfx/interface/progressbars/progress_scheme.dds"
		size = { 14 14 }
		framesize = { 45 45 }
		frame = 3
	}
}