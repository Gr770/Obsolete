types StA_window_my_realm {

	type window_my_realm_authority_header_StA = vbox {

		datacontext = "[GuiLawGroup.GetLawGroup]"
		visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'realm_law' ), GuiLawGroup.IsAvailable )]"
		ignoreinvisible = yes
		
		margin_bottom = 5

		vbox = {
			spacing = 7
			margin_bottom = 15

			text_label_center = {
				text = "[authority|E]: [GetPlayer.MakeScope.Var('ticking_authority').GetValue|#V1]"
				tooltipwidget = { authority_ticking_tooltip = {} }
			}

			text_label_center = {
				text = "[tyranny|E]: [GetPlayer.MakeScope.ScriptValue('character_tyranny')|0]"
			}
		}
		
		authority_progressbar = {}
	}

	type authority_progressbar = widget {
		name = "authority"
		size = { 300 30 }

		widget = {
			progressbar_green = {
				visible = "[LessThan_CFixedPoint(GetPlayer.MakeScope.Var('ticking_authority').GetValue,GetPlayer.MakeScope.ScriptValue('realm_authority'))]"

				size = { 300 30 }
				min = 0
				max = 10000
				value = "[FixedPointToProgressbarValue(GetPlayer.MakeScope.Var('ticking_authority').GetValue)]"
			}
			progressbar_red = {
				visible = "[GreaterThan_CFixedPoint(GetPlayer.MakeScope.Var('ticking_authority').GetValue,GetPlayer.MakeScope.ScriptValue('realm_authority'))]"
				
				size = { 300 30 }
				min = 0
				max = 10000
				value = "[FixedPointToProgressbarValue(GetPlayer.MakeScope.Var('ticking_authority').GetValue)]"
			}
			progressbar_frozen = {
				visible = "[EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('ticking_authority').GetValue,GetPlayer.MakeScope.ScriptValue('realm_authority'))]"

				size = { 300 30 }
				min = 0
				max = 10000
				value = "[FixedPointToProgressbarValue(GetPlayer.MakeScope.Var('ticking_authority').GetValue)]"
			}
		}
		
		hbox = {
			position = { 3 -2 }
		
			text_single = {
				text = "I"
			}
			text_single = {
				text = "II"
			}
			text_single = {
				text = "III"
			}
			text_single = {
				text = "IV"
			}
		}

		hbox = {
			datamodel = "[GuiLawGroup.GetLaws]"
											
			item = {
				text_single = {
					datacontext = "[GuiLaw.GetLaw]"
					
					align = center
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					autoresize = no
					tooltipwidget = { pass_law_tooltip = {} }
					using = tooltip_below
					
					background = {
						texture = "gfx/interface/component_tiles/tile_frame_subwindow_01.dds"
						spriteType = corneredstretched
							
						spriteborder = { 14 14 }
						margin = { 4 4 }
					}
				}
			}
		}
		widget = {
			position = { -3 1 }
			container = {
				state = {
					name = "target"
					next = "target"
					trigger_on_create = yes
					position_x = "[FixedPointToFloat(GuiScope.SetRoot( GetPlayer.MakeScope ).ScriptValue('GUI_authority_target'))]"
					duration = 0
				}
				alwaystransparent = yes
				icon = {
					parentanchor = top
					alwaystransparent = yes
					texture = "gfx/interface/window_factions/faction_progress_threshold.dds"
				}
			}
		}
	}

	type window_my_realm_liege_header_StA = text_single {
		layoutpolicy_horizontal = expanding
		align = center
		text = "SUBMISSION_TO_LIEGE"
		autoresize = no
	}
}

types StA_window_my_realm_tooltips {
	type authority_ticking_tooltip = widget {
		
		size = { 450 250 }
		using = Background_Tooltip
		alwaystransparent = no
		vbox = {
			margin_top = 20
			margin_left = 15
			text_single = {
				layoutpolicy_horizontal = expanding
				text = "AUTHORITY_TICK"
				align = top
			}
			hbox = {
				margin_top = 10
				layoutpolicy_horizontal = expanding
				ignoreinvisible = yes
				vbox = {
					datacontext = "[GetScriptedGui('sgui_authority_not_ticking')]"
					visible = "[Not(ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ))]"
					hbox = {
						datacontext = "[GetScriptedGui('sgui_authority_ticks_up')]"
						visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "AUTHORITY_TICK_UP"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						datacontext = "[GetScriptedGui('sgui_authority_ticks_down')]"
						visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = left
							text = "AUTHORITY_TICK_DOWN"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "AUTHORITY_TICK_BASE"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('monthly_auth_var_base')|2]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						datacontext = "[GetScriptedGui('sgui_authority_ticks_down')]"
						visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "AUTHORITY_TICK_DOWN_PENALTY"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('monthly_auth_var_down')|+%0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						datacontext = "[GetScriptedGui('sgui_has_all_things_innovation')]"
						visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "innovation_all_things"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('monthly_auth_var_all_things_mult')|+%0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						datacontext = "[GetScriptedGui('sgui_has_august_perk')]"
						visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "august_perk_name"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('monthly_auth_var_perk_mult')|+%0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						datacontext = "[GetScriptedGui('sgui_has_overseer_perk')]"
						visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "overseer_perk_name"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('monthly_auth_var_perk_mult')|+%0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}				
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						datacontext = "[GetScriptedGui('sgui_has_administrator_perk')]"
						visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "administrator_perk_name"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('monthly_auth_var_perk_mult')|+%0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					expand = {}
				}
				vbox = {
					datacontext = "[GetScriptedGui('sgui_authority_not_ticking')]"
					visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
					hbox = {
						datacontext = "[GetScriptedGui('sgui_authority_not_ticking')]"
						visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_multi = {
							multiline = yes
							layoutpolicy_horizontal = expanding
							align = left
							text = "AUTHORITY_NOT_TICKING"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
							
						}
					}
				}
				expand = {}
			}
			expand = {}
		}
	}
}

types StA_widget_vassal_list {

	type widget_vassal_list_item = widget {
		datacontext = "[CharacterListItem.GetCharacter]"
		size = { 200 180 }

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin = { 10 5 }

			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 10

				background = {
					using = Background_Area
				}

				portrait_head_small_cached = {}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_right = 10

					hbox = {
						layoutpolicy_horizontal = expanding

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 5

							hbox = {
								layoutpolicy_horizontal = expanding
								minimumsize = { 0 30 }

								background = {
									using = Background_Area_Characterlist
									margin = { 8 0 }
									margin_left = 15

									using = Mask_Rough_Edges
								}

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "SHARED_UNIUI_CHAR_UINAMENOTT"
									using = Font_Size_Medium
									autoresize = no
									fontsize_min = 13
									align = nobaseline
								}
							}

							text_single = {
								name = "character_relation"
								visible = "[Character.GetLiege.IsLocalPlayer]"
								layoutpolicy_horizontal = expanding
								text = "[Character.GetRelationToString(GetPlayer)] "
								default_format = "#low"
								autoresize = no
								fontsize_min = 13
								align = nobaseline
							}
						}

						block "own_vassal" {
							vbox = {
								layoutpolicy_vertical = expanding
								margin_left = 10
								visible = "[Character.GetLiege.IsLocalPlayer]"

								hbox = {
									coa_title_tiny_crown = {
										name = "allegiance_flag"
										datacontext = "[VassalContract.GetTitleAllegiance]"
										visible = "[Title.IsValid]"
										tooltip = "MRW_TITLE_ALLEGIANCE"
										blockoverride "coa_tooltip" {}
									}

									vbox = {
										layoutpolicy_vertical = expanding
										margin_top = 5

										hbox = {

											icon = {
												name = "hook"
												visible = "[Character.PlayerHasHooksOrHookableSecrets]"
												size = { 25 25 }
												framesize = { 40 40 }
												texture = "gfx/interface/icons/portraits/hook_secret.dds"

												frame = "[Character.GetHookOrHookableSecretsFrame]"
												tooltip = "[Character.HookTooltip]"
											}

											icon = {
												name = "icon_non_dejure"
												visible = "[Not( VassalContract.IsRightfulLiege )]"
												size = { 30 30 }
												texture = "gfx/interface/icons/levy_tax_reduction.dds"

												using = tooltip_ws
												tooltip = "MRW_TT_NOT_RIGHTFUL_LIEGE"
											}
										}
										expand = {}
									}
								}
								expand = {}
							}
						}
					}

					expand = {}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5

						text_single = {
							text = "REALM_WINDOW_SIZE"
							tooltip = "REALM_WINDOW_SIZE_TT"
							align = nobaseline
							visible = "[NotEqualTo_int32(Character.GetPrimaryTitle.GetTierFrame, '(int32)2')]" #nonbaron

						}

						hbox = {
							spacing = 3
							margin = { 5 0 }

							block "own_vassal"
							{
								visible = no
							}

							icon = {
								size = { 22 22 }
								texture = "gfx/interface/icons/icon_soldier.dds"
							}

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "[Character.GetMilitaryStrengthText]"
								align = nobaseline
								default_format = "#high"
							}
						}

						text_single = {
							visible = "[Character.IsPowerfulVassal]"
							text = "MY_REALM_WINDOW_POWERFUL_VASSAL"
							layoutpolicy_horizontal = expanding
							align = nobaseline
							autoresize = no
						}

						expand = {}

						hbox_skills_grid = {}
					}

					expand = {}
				}
			}

			block "own_vassal"
			{
				block "feudal_contract"
				{
					vbox = {
						name = "feudal_info"
						layoutpolicy_horizontal = expanding
						margin = { 10 5 }
						spacing = 10

						background = {
							using = Background_Area
						}
						# [TCMA]
						widget_vassal_list_modify_contract_vassal_vanilla = {
							datacontext = "[GetScriptedGui('sgui_MMM_active')]"
							visible = "[Not(ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ))]"
						}
						widget_vassal_list_modify_contract_vassal_MMM = {
							datacontext = "[GetScriptedGui('sgui_MMM_active')]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						}
						# [/TCMA]

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 3

								icon = {
									size = { 25 25 }
									texture = "gfx/interface/icons/icon_gold.dds"
								}

								widget = {
									layoutpolicy_horizontal = expanding

									background = {
										using = Background_Area
										margin = { 3 2 }
									}

									progressbar_standard_transparent = {
										size = "[MyRealmWindowVassalItem.GetRelativeSizeForTax]"
										minimumsize = { 10 0 }
										value = "[FixedPointToProgressbarValue(VassalContract.GetTaxRatioForLiege)]"
									}

									flowcontainer = {
										parentanchor = center
										position = { 0 -2 }
										spacing = 4

										text_single = {
											text = "[MyRealmWindowVassalItem.GetCachedTax|=1]"
										}
									}
								}

								tooltipwidget = {
									my_realm_window_contribution_tooltip = {
										datacontext = "[MyRealmWindowVassalItem.GetTaxBreakdown]"
										blockoverride "levy_info_visible" { visible = no }
										blockoverride "contribution_tooltip_header"
										{
											text = "MRW_TT_TAXES_TO_ME"
										}

										blockoverride "levy_info"
										{
											text_single = {
												multiline = yes
												maximumsize = { 250 -1 }
												text = "[MyRealmWindowVassalItem.GetLevyTooltip]"
											}
										}
									}
								}
								using = tooltip_ws
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 3

								icon = {
									size = { 25 25 }
									texture = "gfx/interface/icons/icon_soldier.dds"
								}

								widget = {
									layoutpolicy_horizontal = expanding
									#	size = { 150 22 }

									background = {
										using = Background_Area
										margin = { 3 2 }
									}

									progressbar_standard_transparent = {
										size = "[MyRealmWindowVassalItem.GetRelativeSizeForLevies]"
										minimumsize = { 10 0 }
										value = "[FixedPointToProgressbarValue(VassalContract.GetLevyRatioForLiege)]"
									}

									flowcontainer = {
										parentanchor = center
										position = { 0 -2 }
										spacing = 4

										text_single = {
											text =  "[MyRealmWindowVassalItem.GetCachedLeviesFormatted]"
										}
									}
								}

								tooltipwidget = {
									my_realm_window_contribution_tooltip = {
										datacontext = "[MyRealmWindowVassalItem.GetLeviesBreakdown]"
										blockoverride "tax_info_visible" { visible = no }
										blockoverride "contribution_tooltip_header"
										{
											text = "MRW_TT_LEVIES_TO_ME"
										}
										blockoverride "tax_info"
										{
											text_single = {
												multiline = yes
												maximumsize = { 250 -1 }
												text = "[MyRealmWindowVassalItem.GetTaxTooltip]"
											}
										}
									}
								}
								using = tooltip_ws
							}
						}
						expand = {}
					}
				}
			}

			expand = {}
		}
	}

	type widget_vassal_list_modify_contract_vassal_submission_StA = hbox {
		layoutpolicy_horizontal = growing
		hbox = {
			datacontext = "[GetScriptedGui('sgui_has_submission_value')]"
			visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
			layoutpolicy_horizontal = expanding
			vbox = {
				text_single = {
					layoutpolicy_horizontal = expanding
					text = "[submission|E] :"
					default_format = "#low"
					align = right
				}
				text_single = {
					layoutpolicy_horizontal = expanding
					text = "[land_share|E] :"
					default_format = "#low"
					align = right
				}
			}
			vbox = {
				minimumsize = {40}
				text_single = {
					layoutpolicy_horizontal = expanding
					text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submission')|#V0]"
					default_format = "#low"
					align = right
					tooltipwidget = { submission_breakdown_box = {} }
					using = tooltip_nw
				}
				text_single = {
					layoutpolicy_horizontal = expanding
					text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('land_share')|0]%"
					default_format = "#low"
					align = right
				}
			}
		}
	}

	type widget_vassal_list_modify_contract_vassal_MMM = hbox {
		layoutpolicy_horizontal = expanding
		hbox = {
			layoutpolicy_horizontal = expanding
			visible = "[Not(VassalContract.UsesObligationLevels)]"
			spacing = 5

			icon = {
				size = { 42 42 }
				texture = "gfx/interface/icons/symbols/icon_cross.dds"
				tooltip = MY_REALM_WINDOW_NO_FEUDAL_CONTRACT_TT
				enabled = no
			}

			text_single = {
				text = "[Character.GetGovernment.GetName]"
				align = nobaseline
			}

			expand = {}
		}
		hbox = {
			layoutpolicy_horizontal = expanding
			visible = "[Not( Character.GetPrimaryTitle.IsBarony)]"
			spacing = 10

			widget_vassal_list_modify_contract_vassal_button_vanilla = {
				datacontext = "[GetScriptedGui('sgui_TCMA_active')]"
				visible = "[Not(ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ))]"
			}
			widget_vassal_list_modify_contract_vassal_button_TCMA = {
				datacontext = "[GetScriptedGui('sgui_TCMA_active')]"
				visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
			}

			text_single = {
				visible = "[VassalContract.UsesObligationLevels]"
				layoutpolicy_horizontal = expanding
				text = "MY_REALM_WINDOW_VASSAL_OBLIGATION"
				default_format = "#low"
				align = nobaseline
			}

			vassal_contract_not_default_icon = {}

			expand = {}

		}
		expand = {}
		hbox = {
			visible = "[Not( Character.GetPrimaryTitle.IsBarony)]"
			widget_vassal_list_modify_contract_vassal_submission_StA = {
				datacontext = "[GetScriptedGui('sgui_StA_active')]"
				visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
			}
		}
	}
}

types StA_widget_vassal_list_tooltips {
	type submission_breakdown_box = widget {
		size = { 400 150 }
		using = Background_Tooltip
		alwaystransparent = no
		vbox = {
			margin_top = 20
			margin_left = 15
			text_single = {
				layoutpolicy_horizontal = expanding
				text = "SUBMISSION_TITLE"
				align = top
			}
			hbox = {
				margin_top = 10
				layoutpolicy_horizontal = expanding
				ignoreinvisible = yes
				vbox = {
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						visible = "[Character.GetGovernment.IsType('feudal_government')]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "[feudal_submission|E]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('feudal_submission')|#V1]"
							# tooltipwidget = { feudal_submission_breakdown_box = {} }
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						visible = "[Character.GetGovernment.IsType('clan_government')]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "[clan_submission|E]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('clan_submission')|#V1]"
							tooltipwidget = { clan_submission_breakdown_box = {} }
							using = tooltip_nw
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						visible = "[Character.GetGovernment.IsType('tribal_government')]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "[tribal_submission|E]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('tribal_submission')|#V1]"
							using = tooltip_nw
							tooltipwidget = { tribal_submission_breakdown_box = {} }
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						visible = "[Character.GetGovernment.IsType('theocracy_government')]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "[theocracy_submission|E]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('theocracy_submission')|#V1]"
							using = tooltip_nw
							tooltipwidget = { theocracy_submission_breakdown_box = {} }
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						visible = "[Character.GetGovernment.IsType('republic_government')]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "[republic_submission|E]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('republic_submission')|#V1]"
							using = tooltip_nw
							tooltipwidget = { republic_submission_breakdown_box = {} }
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}					
					hbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "[submissiveness|E]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submissiveness')|#V=+0]%"
							using = tooltip_ws
							tooltipwidget = { submissiveness_breakdown_box = {} }
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						visible = "[Not(EqualTo_CFixedPoint(GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submission_liberty'),'(CFixedPoint)0'))]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "CLAN_SUBMISSION_BD_LIBERTY"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submission_liberty')|0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						visible = "[Not(EqualTo_CFixedPoint(GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submission_councillor_task'),'(CFixedPoint)0'))]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "CLAN_SUBMISSION_BD_LIBERTY"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submission_councillor_task')|0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = right
							text = "= [GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submission')|1]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					expand = {}
				}
				expand = {}
			}
			expand = {}
		}
	}

	type clan_submission_breakdown_box = widget {
		size = { 400 200 }
		using = Background_Tooltip
		alwaystransparent = no
		vbox = {
			margin_top = 20
			margin_left = 15
			text_single = {
				layoutpolicy_horizontal = expanding
				text = "CLAN_SUBMISSION_TITLE"
				align = top
			}
			hbox = {
				margin_top = 10
				layoutpolicy_horizontal = expanding
				ignoreinvisible = yes
				vbox = {
					hbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "CLAN_SUBMISSION_BD_LIEGE_OPINION"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[Character.GetOpinionOf(GetPlayer)]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = ""
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "/ 2"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = ""
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "+ 50"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = right
							text = "= [GuiScope.SetRoot(Character.MakeScope ).ScriptValue('clan_submission')|1]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					expand = {}
				}
				expand = {}
			}
			expand = {}
		}
	}
	
	type tribal_submission_breakdown_box = widget {
		size = { 400 200 }
		using = Background_Tooltip
		alwaystransparent = no
		vbox = {
			margin_top = 20
			margin_left = 15
			text_single = {
				layoutpolicy_horizontal = expanding
				text = "TRIBAL_SUBMISSION_TITLE"
				align = top
			}
			hbox = {
				margin_top = 10
				layoutpolicy_horizontal = expanding
				ignoreinvisible = yes
				vbox = {
					hbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "TRIBAL_SUBMISSION_BD_LIEGE_TRIBAL_POWER"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.GetLiege.MakeScope ).ScriptValue('tribal_power_liege')|#V0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
							tooltipwidget = { tribal_liege_power_breakdown_box = {} }
							using = tooltip_nw
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "TRIBAL_SUBMISSION_BD_TRIBAL_POWER"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "/ [GuiScope.SetRoot(Character.MakeScope ).ScriptValue('tribal_power')|#V0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
							tooltipwidget = { tribal_power_breakdown_box = {} }
							using = tooltip_ws
						}
					}
					# hbox = {
					# 	layoutpolicy_horizontal = expanding
					# 	minimumsize = {350}
					# 	text_single = {
					# 		layoutpolicy_horizontal = expanding
					# 		align = left
					# 		text = "TRIBAL_SUBMISSION_BD_LIEGE_HOARDING"
					# 		fonttintcolor = "[TooltipInfo.GetTintColor]"
					# 	}
					# 	text_single = {
					# 		layoutpolicy_horizontal = fixed
					# 		align = right
					# 		text = "/ [GuiScope.SetRoot(Character.GetLiege.MakeScope ).ScriptValue('tribal_hoarded_duchies')|0]"
					# 		fonttintcolor = "[TooltipInfo.GetTintColor]"
					# 	}
					# }
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = right
							text = "= [GuiScope.SetRoot(Character.MakeScope ).ScriptValue('tribal_submission')|1]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					expand = {}
				}
				expand = {}
			}
			expand = {}
		}
	}

	type tribal_liege_power_breakdown_box = widget {
		size = { 400 200 }
		using = Background_Tooltip
		alwaystransparent = no
		vbox = {
			margin_top = 20
			margin_left = 15
			text_single = {
				layoutpolicy_horizontal = expanding
				text = "TRIBAL_SUBMISSION_LIEGE_POWER"
				align = top
			}
			hbox = {
				margin_top = 10
				layoutpolicy_horizontal = expanding
				ignoreinvisible = yes
				vbox = {
					hbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "TRIBAL_SUBMISSION_BD_LIEGE_RANK"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.GetLiege.MakeScope ).ScriptValue('tribal_primary_title')|0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "TRIBAL_SUBMISSION_BD_LIEGE_FAME"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "* [Character.GetLiege.GetPrestigeLevel]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							visible = "[EqualTo_CFixedPoint(GuiScope.SetRoot(Character.GetLiege.MakeScope ).ScriptValue('has_a_life_of_glory_perk'),'(CFixedPoint)1')]"
							layoutpolicy_horizontal = fixed
							align = right
							text = " + 100%"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "TRIBAL_SUBMISSION_BD_LIEGE_RENOWN"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "* [Character.GetLiege.GetDynasty.GetPrestigeLevel]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "TRIBAL_SUBMISSION_BD_LIEGE_MULT"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = right
							text = "* 10"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = right
							text = "= [GuiScope.SetRoot(Character.MakeScope ).ScriptValue('tribal_power_liege')|0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					expand = {}
				}
				expand = {}
			}
			expand = {}
		}
	}

	type tribal_power_breakdown_box = widget {
		size = { 400 150 }
		using = Background_Tooltip
		alwaystransparent = no
		vbox = {
			margin_top = 20
			margin_left = 15
			text_single = {
				layoutpolicy_horizontal = expanding
				text = "TRIBAL_SUBMISSION_POWER"
				align = top
			}
			hbox = {
				margin_top = 10
				layoutpolicy_horizontal = expanding
				ignoreinvisible = yes
				vbox = {
					hbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "TRIBAL_SUBMISSION_BD_RANK"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('tribal_primary_title')|0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "TRIBAL_SUBMISSION_BD_FAME"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "* [Character.GetPrestigeLevel]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							visible = "[EqualTo_CFixedPoint(GuiScope.SetRoot(Character.MakeScope ).ScriptValue('has_a_life_of_glory_perk'),'(CFixedPoint)1')]"
							layoutpolicy_horizontal = fixed
							align = right
							text = " + 100%"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "TRIBAL_SUBMISSION_BD_RENOWN"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "* [Character.GetDynasty.GetPrestigeLevel]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = right
							text = "= [GuiScope.SetRoot(Character.MakeScope ).ScriptValue('tribal_power')|0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					expand = {}
				}
				expand = {}
			}
			expand = {}
		}
	}

	type theocracy_submission_breakdown_box = widget {
		size = { 400 200 }
		using = Background_Tooltip
		alwaystransparent = no
		vbox = {
			margin_top = 20
			margin_left = 15
			text_single = {
				layoutpolicy_horizontal = expanding
				text = "THEOCRACY_SUBMISSION_TITLE"
				align = top
			}
			hbox = {
				margin_top = 10
				layoutpolicy_horizontal = expanding
				ignoreinvisible = yes
				vbox = {
					hbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = {350}
						visible = "[Not(Character.GetFaith.GetReligiousHead.IsValid)]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "THEOCRACY_SUBMISSION_BD_HOF_OPINION"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[Character.GetOpinionOf(GetPlayer)]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						visible = "[Character.GetFaith.GetReligiousHead.IsValid]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "THEOCRACY_SUBMISSION_BD_VASSAL_OPINION"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[Character.GetFaith.GetReligiousHead.GetOpinionOf(GetPlayer)]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}					
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "REPUBLIC_SUBMISSION_BD_OFFSET"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "/ 2"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "REPUBLIC_SUBMISSION_BD_OFFSET"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "+ 50"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						visible = "[Not(EqualTo_CFixedPoint(GuiScope.SetRoot(Character.MakeScope ).ScriptValue('theocracy_submission_faith_hostility'),'(CFixedPoint)0'))]"
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "THEOCRACY_SUBMISSION_BD_FAITH_HOSTILITY"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('theocracy_submission_faith_hostility')|1]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}	
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = right
							text = "= [GuiScope.SetRoot(Character.MakeScope ).ScriptValue('theocracy_submission')|1]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					expand = {}
				}
				expand = {}
			}
			expand = {}
		}
	}

	type republic_submission_breakdown_box = widget {
		size = { 400 200 }
		using = Background_Tooltip
		alwaystransparent = no
		vbox = {
			margin_top = 20
			margin_left = 15
			text_single = {
				layoutpolicy_horizontal = expanding
				text = "REPUBLIC_SUBMISSION_TITLE"
				align = top
			}
			hbox = {
				margin_top = 10
				layoutpolicy_horizontal = expanding
				ignoreinvisible = yes
				vbox = {
					hbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "REPUBLIC_SUBMISSION_BD_LIEGE_INCOME"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('republic_submission_liege_income')|1]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "REPUBLIC_SUBMISSION_BD_LIEGE_RANK_AVG_INCOME"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "/ [GuiScope.SetRoot(Character.MakeScope ).ScriptValue('republic_submission_liege_rank_avg_income')|1]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "REPUBLIC_SUBMISSION_BD_OFFSET"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "- 50"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = right
							text = "= [GuiScope.SetRoot(Character.MakeScope ).ScriptValue('republic_submission')|1]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					expand = {}
				}
				expand = {}
			}
			expand = {}
		}
	}

	type submissiveness_breakdown_box = widget {
		size = { 400 200 }
		using = Background_Tooltip
		alwaystransparent = no
		vbox = {
			margin_top = 20
			margin_left = 15
			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[submissiveness|E]"
				align = top
			}
			hbox = {
				margin_top = 10
				layoutpolicy_horizontal = expanding
				ignoreinvisible = yes
				vbox = {
					hbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "[submissiveness_honor|E]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submissiveness_honor')|=+0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "[submissiveness_vengefulness|E]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submissiveness_vengefulness')|=+0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = left
							text = "[submissiveness_dread|E]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
						text_single = {
							layoutpolicy_horizontal = fixed
							align = right
							text = "[GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submissiveness_dread')|=+0]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = {350}
						text_single = {
							layoutpolicy_horizontal = expanding
							align = right
							text = "= [GuiScope.SetRoot(Character.MakeScope ).ScriptValue('submissiveness')|=+1]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}
					}
					expand = {}
				}
				expand = {}
			}
			expand = {}
		}
	}
}