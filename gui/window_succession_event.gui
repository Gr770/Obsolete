######################################################
################# SUCCESSION EVENT ###################
######################################################

window = {
	name = "succession_event_window"
	size = { 100% 100% }
	movable = no
	layer = confirmation
	alwaystransparent = yes
	
	window_succession_event_show_state_PoW = {
		trigger_when = "[GetScriptedGui('window_succession_event_show_state_Inherichance).IsShown(GuiScope.SetRoot( GetPlayer.MakeScope ).End]"
	}

	state = {
		name =_show
		#trigger_on_create = yes
		on_finish = "[PdxGuiTriggerAllAnimations('ruler_transition_appear')]"
		on_start = "[GetVariableSystem.Clear( 'ruler_transition_remove_fade')]"
	}

	state = {
		name = ruler_transition_reset
		delay = 0.25
		on_finish = "[SuccessionEventWindow.Close]"
	}

	button = {
		size = { 100% 100% }
		alpha = 0
		#	filter_mouse = all
		visible = "[Not(GetVariableSystem.Exists( 'ruler_transition_remove_fade'))]"

		state = {
			name = _show
			trigger_on_create = yes
			duration = 1
			alpha = 0.7
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Standard
		}

		state = {
			name = _mouse_click
			on_start = "[GetVariableSystem.Set( 'ruler_transition_remove_fade', 'true')]"
		}

		background = {
			using = Background_Area_Dark
			margin = { 20 20 }
		}
	}

	widget = {
		parentanchor = center
		position = { 0 -500 }
		alpha = 0
		size = { 1000 750 }
		filter_mouse = all
		alwaystransparent = no

		state = {
			name = _hide
			position = { 0 -500 }
			alpha = 0
		}

		state = {
			name = ruler_transition_reset
			next = reset_position
			using = Animation_FadeOut_Standard
		}

		state = {
			name = reset_position
			position = { 0 -500 }
		}

		state = {
			name = ruler_transition_appear
			next = b
			duration = 1.4
			#duration = 0
			trigger_on_create = yes

			start_sound = {
				soundeffect = "event:/SFX/UI/Character/sfx_ui_character_death"
			}
		}

		state = {
			name = b
			next = c
			duration = 0.16

			animation = {
				bezier = { 0.5 0 1 0.5 }
				position = { 0 0 }
			}

			animation = {
				bezier = { 0 0.5 0.5 1 }
				alpha = 1
			}
		}

		state = {
			name = c
			next = d
			duration = 0.075
			bezier = { 0 0.5 0.5 1 }

			position = { 0 -20 }
		}

		state = {
			name = d
			next = e
			duration = 0.075
			bezier = { 0 0.5 0.5 1 }

			position = { 0 0 }
		}

		state = {
			name = e
			next = f
			duration = 0.025
			bezier = { 0 0.5 0.5 1 }

			position = { 0 -5 }
		}

		state = {
			name = f
			duration = 0.025
			bezier = { 0.5 0 1 0.5 }

			position = { 0 -0 }
		}



		icon = {
			parentanchor = center
			size = { 200% 200% }
			alwaystransparent = yes
			texture = "gfx/interface/component_masks/mask_fade_circle.dds"
			color = { 0.1 0.1 0.1 1 }
			alpha = 0

			state = {
				name = ruler_transition_reset
				using = Animation_FadeOut_Standard
			}

			state = {
				name = ruler_transition_appear
				trigger_on_create = yes
				delay = 0.8
				using = Animation_Curve_Default
				alpha = 0.6
				duration = 1.4
			}

			state = {
				name = _hide
				using = Animation_Curve_Default
				duration = 3
				alpha = 0
			}
		}

		widget = {
			size = { 100% 100% }
			using = Window_Background
			using = Window_Decoration_Spike
		}

		vbox = {
			using = Window_Margins

			widget = {
				name = "top"
				visible = "[SuccessionEventWindow.IsSuccession]"
				layoutpolicy_horizontal = expanding
				size = { 0 105 }
				allow_outside = yes

				background = {
					using = Background_Area_Dark
					margin = { 3 0 }
					margin_top = 5
				}

				text_single = {
					name = "header"
					parentanchor = center
					position = { 0 -20 }
					text = "[SuccessionEventWindow.GetHeader]"
					default_format = "#N"
					using = Font_Type_Flavor
					align = center
					fontsize = 30
				}

				flowcontainer = {
					parentanchor = bottom|hcenter
					position = { 0 22 }
					spacing = 20
					ignoreinvisible = yes

					button_tab_round = {
						down = "[SuccessionEventWindow.IsSuccessorTabOpen]"
						alwaystransparent = "[SuccessionEventWindow.IsSuccessorTabOpen]"
						onclick = "[PdxGuiTriggerAllAnimations('ruler_transition_tab_switch')]"

						using = tooltip_ne
						tooltip = "SUCCESSION_SUCCESSOR_TAB_TT"

						button_heir = {
							alwaystransparent = yes
							parentanchor = center
							down = "[SuccessionEventWindow.IsSuccessorTabOpen]"
						}

						state = {
							name = _mouse_click
							delay = 0.2
							on_finish = "[SuccessionEventWindow.OpenSuccessorTab]"
						}
					}

					button_tab_round = {
						down = "[SuccessionEventWindow.IsTitlesTabOpen]"
						alwaystransparent = "[SuccessionEventWindow.IsTitlesTabOpen]"
						visible = "[DataModelHasItems( SuccessionEventWindow.GetInheritedTitles )]"
						onclick = "[PdxGuiTriggerAllAnimations('ruler_transition_tab_switch')]"

						using = tooltip_ne
						tooltip = "SUCCESSION_TITLES_TAB_TT"

						button_title = {
							alwaystransparent = yes
							parentanchor = center
							down = "[SuccessionEventWindow.IsTitlesTabOpen]"
						}

						state = {
							name = _mouse_click
							delay = 0.2
							on_finish = "[SuccessionEventWindow.OpenTitlesTab]"
						}
					}

					button_tab_round = {
						down = "[SuccessionEventWindow.IsLineageTabOpen]"
						alwaystransparent = "[SuccessionEventWindow.IsLineageTabOpen]"
						onclick = "[PdxGuiTriggerAllAnimations('ruler_transition_tab_switch')]"

						using = tooltip_ne
						tooltip = "SUCCESSION_LINEAGE_TAB_TT"

						button_dynasty_tree = {
							alwaystransparent = yes
							parentanchor = center
							down = "[SuccessionEventWindow.IsLineageTabOpen]"
						}

						state = {
							name = _mouse_click
							delay = 0.2
							on_finish = "[SuccessionEventWindow.OpenLineageTab]"
						}
					}
				}
			}

			widget = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				scissor = yes

				state = {
					name = "ruler_transition_tab_switch"
					alpha = 0
					duration = 0.2
					next = "b"
					using = Animation_Curve_Default
				}

				state = {
					name = "b"
					alpha = 1
					duration = 0.2
					using = Animation_Curve_Default
				}

				vbox = {
					name = "top_lineage"
					visible = "[SuccessionEventWindow.IsLineage]"
					layoutpolicy_horizontal = expanding


					text_single = {
						text = "SUCCESSION_INHERITED_TITLES"
						default_format = "#light_background"
						align = left
						layoutpolicy_horizontal = expanding
					}


					hbox = {
						layoutpolicy_horizontal = expanding

						fixedgridbox = {
							name = "inherited"
							datamodel = "[SuccessionEventWindow.GetInheritedTitles]"
							datamodel_wrap = 11
							addcolumn = 56
							addrow = 56
							flipdirection = yes

							item = {
								coa_title_small_crown = {
								}
							}

						}

						expand = {}
					}

					spacer = {
						size = { 5 5 }
					}

					hbox = {
						text_single = {
							name = "dynasty_name"
							text = "SUCCESSION_EVENT_WINDOW_HEADING_LINEAGE"
							default_format = "#high"
							using = Font_Type_Flavor
							align = center
							fontsize = 30
						}

						button_icon = {
							name = "close_button"
							shortcut = "close_window"
							tooltip = "CLOSE_TOOLTIP"
							texture = "gfx/interface/icons/flat_icons/window_close.dds"
							onclick = "[SuccessionEventWindow.Close]"
						}
					}

					divider_light = {
						layoutpolicy_horizontal = expanding
					}
				}

				widget = {
					size = { 100% 100% }

					state = {
						name = "ruler_transition_tab_switch"
						next = "left"
						position_x = -200
						duration = 0.2
						using = Animation_Transition_Start
					}

					state = {
						name = "left"
						next = "center"
						position_x = 200
						duration = 0
					}

					state = {
						name = "center"
						position_x = 0
						duration = 0.2
						using = Animation_Transition_End
					}

					### SUCCEESION
					widget = {
						size = { 100% 100% }

						# Left Character
						vbox = {
							visible = "[SuccessionEventWindow.IsSuccessorTabOpen]"

							hbox = {
								layoutpolicy_vertical = expanding

								vbox = {
									name = "left"
									datacontext = "[SuccessionEventWindow.GetDeadCharacterLegacy]"
									layoutpolicy_vertical = expanding

									widget = {
										size = { 250 340 }

										portrait_body = {
											datacontext = "[SuccessionEventWindow.GetDeadCharacter]"
											blockoverride "status_icons" {}
											blockoverride "opinion_box" {}
											blockoverride "coa" {}
											blockoverride "dead_icon" {}
											scale = 1.2
										}
									}

									hbox_legacy_status = {}

									text_single = {
										layoutpolicy_horizontal = expanding
										text = "LEGACY_NAME"
										default_format = "#high"
										align = center
										autoresize = no
									}

									text_single = {
										text = "LEGACY_REIGN"
										align = center
										tooltip = "LEGACY_REIGN_TT"
									}

									expand = {
										layoutpolicy_vertical = expanding
									}
								}

								### Center box
								vbox = {
									name = "center"
									datacontext = "[SuccessionEventWindow.GetDeadCharacter]"
									layoutpolicy_vertical = expanding
									layoutpolicy_horizontal = expanding
									margin = { 10 0 }
									margin_top = 40

									hbox = {
										layoutpolicy_horizontal = expanding

										widget = {
											layoutpolicy_vertical = expanding
											layoutpolicy_horizontal = expanding

											coa_title_small_crown = {
												datacontext = "[SuccessionEventWindow.GetDeadCharacter.GetPrimaryTitle]"
												visible = "[Title.IsValid]"
												parentanchor = bottom|hcenter
											}
										}

										coa_house_big = {
											name = "dynasty_coa"
											datacontext = "[SuccessionEventWindow.GetDeadCharacter.GetHouse]"
										}

										widget = {
											layoutpolicy_vertical = expanding
											layoutpolicy_horizontal = expanding

											# [UniUI]
											# [Vanilla]
											coa_title_small_crown_vanilla = {
												datacontext = "[GetScriptedGui('window_succession_event_vanilla')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
											}
											# [/Vanilla]
											# [Inherichance]
											coa_title_small_crown_Inherichance = {
												datacontext = "[GetScriptedGui('window_succession_event_Inherichance')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
											}
											# [/Inherichance]
											# [/UniUI]
										}
									}

									# [UniUI]
									# [Vanilla]
									window_succession_event_text_vanilla = {
										datacontext = "[GetScriptedGui('window_succession_event_text_vanilla')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									# [/Vanilla]
									# [Inherichance]
									window_succession_event_text_Inherichance = {
										datacontext = "[GetScriptedGui('window_succession_event_text_Inherichance')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									# [/Inherichance]
									# [/UniUI]

									expand = {
										layoutpolicy_vertical = expanding
									}
								}

								### Right Character
								vbox = {
									layoutpolicy_vertical = expanding
									spacing = 5

									text_label_center = {
										visible = "[SuccessionEventWindow.GetPlayerHeir.IsValid]"
										text = "LEGACY_CONTINUE_PLAYING"
									}

									vbox_heir = {
										name = "right"
										datacontext = "[SuccessionEventWindow.GetPlayerHeirLegacy]"
										visible = "[SuccessionEventWindow.GetPlayerHeir.IsValid]"
										layoutpolicy_vertical = expanding

										blockoverride "portrait_glow" {}

										background = {
											using = Background_Area
										}
									}

									vbox_dynasty = {
										name = "dynasty_right"
										datacontext = "[SuccessionEventWindow.GetDeadCharacter.GetDynasty]"
										visible = "[Not(SuccessionEventWindow.GetPlayerHeir.IsValid)]"
										layoutpolicy_vertical = expanding
									}
								}
							}
						}
					}

					### TITLES
					widget = {
						visible = "[SuccessionEventWindow.IsTitlesTabOpen]"
						size = { 100% 100% }

						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin_right = 16
							margin_top = 40

							vbox_heir = {
								name = "right"
								datacontext = "[SuccessionEventWindow.GetPlayerHeirLegacy]"
								visible = "[SuccessionEventWindow.GetPlayerHeir.IsValid]"
								layoutpolicy_vertical = expanding
							}

							vbox_dynasty = {
								name = "dynasty_right"
								datacontext = "[SuccessionEventWindow.GetDeadCharacter.GetDynasty]"
								visible = "[Not(SuccessionEventWindow.GetPlayerHeir.IsValid)]"
								layoutpolicy_vertical = expanding
							}

							scrollbox = {
								name = "scrollbox_titles"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								blockoverride "scrollbox_content" {

									# [UniUI]
									# [Vanilla]
									window_succession_event_titles_vanilla = {
										datacontext = "[GetScriptedGui('window_succession_event_titles_vanilla')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									# [/Vanilla]
									# [Inherichance]
									window_succession_event_titles_Inherichance = {
										datacontext = "[GetScriptedGui('window_succession_event_titles_Inherichance')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									# [/Inherichance]
									# [/UniUI]
								}
							}
						}

					}

					### LINEAGE
					margin_widget = {
						size = { 100% 100% }
						visible = "[SuccessionEventWindow.IsLineageTabOpen]"
						margin = { 5 0 }
						margin_top = 30

						scrollarea = {
							size = { 100% 100% }
							#	layoutpolicy_horizontal = expanding
							#	layoutpolicy_vertical = expanding

							scrollbarpolicy_vertical = always_off

							scrollbar_horizontal = {
								using = Scrollbar_Horizontal
								blockoverride "name"
								{
									name = legacy_scroll
								}
							}

							scrollwidget = {
								hbox = {
									name = "info"
									parentanchor = vcenter|right
									margin = { 30 0 }

									expand = {}

									hbox = {
										margin_left = 50
										margin_right = 60

										datamodel = "[SuccessionEventWindow.GetLegacy]"
										spacing = 60

										item = {
											# [UniUI]
											# [Vanilla]
											window_succession_event_legacy_item_vanilla = {
												datacontext = "[GetScriptedGui('window_succession_event_legacy_item_vanilla')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
											}
											# [/Vanilla]
											# [Inherichance]
											window_succession_event_legacy_item_Inherichance = {
												datacontext = "[GetScriptedGui('window_succession_event_legacy_item_vanilla')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
											}
											# [/Inherichance]
											# [/UniUI]
										}
									}

									vbox_current_lineage = {
										visible = "[SuccessionEventWindow.GetPlayerHeir.IsValid]"
										datacontext = "[SuccessionEventWindow.GetPlayerHeirLegacy]"
									}

									vbox_dynasty = {
										name = "dynasty_right"
										datacontext = "[SuccessionEventWindow.GetDeadCharacter.GetDynasty]"
										visible = "[Not(SuccessionEventWindow.GetPlayerHeir.IsValid)]"
									}

									expand = {}
								}
							}
						}
					}
				}
			}

			hbox = {
				margin = { 0 10 }
				visible = "[SuccessionEventWindow.IsSuccession]"
				layoutpolicy_horizontal = expanding

				background = {
					using = Background_Area_Dark
				}

				# [UniUI]
				# [Vanilla]
				window_succession_event_buttons_vanilla = {
					datacontext = "[GetScriptedGui('window_succession_event_buttons_vanilla')]"
					visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
				}
				# [/Vanilla]
				# [Inherichance]
				window_succession_event_buttons_Inherichance = {
					datacontext = "[GetScriptedGui('window_succession_event_buttons_Inherichance')]"
					visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
				}
				# [/Inherichance]
				# [/UniUI]
			}
		}
	}
}

######################################################
################ TYPES AND TEMPLATES #################
######################################################

types Legacy
{
	type vbox_dynasty = vbox {
		spacing = 20
		spacer = {
			size = { 240 0 }
		}

		coa_dynasty_huge = {}

		text_label_center = {
			text = "SUCCESSION_DYNASTY_INFO"
			autoresize = yes
			max_width = 200
			min_width = 200
		}
		text_multi = {
			text = "SUCCESSION_NO_HEIR"
			visible = "[Not( SuccessionEventWindow.GetDeadCharacter.IsAlive )]"
			autoresize = yes
			max_width = 220
			align = center
		}

		expand = {
			layoutpolicy_vertical = expanding
		}
	}

	type vbox_heir = vbox {
		margin_bottom = 5

		widget = {
			size = { 250 340 }

			portrait_body = {
				datacontext = "[SuccessionEventWindow.GetPlayerHeir]"
				blockoverride "status_icons" {}
				blockoverride "opinion_box" {}
				blockoverride "coa" {}
				blockoverride "dead_icon" {}
				scale = 1.2
			}
		}

		spacer = {
			size = { 20 10 }
		}

		hbox_legacy_status = {}

		text_single = {
			layoutpolicy_horizontal = expanding
			autoresize = no
			text = "LEGACY_NAME"
			default_format = "#high"
			align = center
		}

		text_single = {
			text = "[SuccessionEventWindow.GetPlayerHeir.GetSuccessionRelation( SuccessionEventWindow.GetDeadCharacter)]"
		}

		spacer = {
			size = { 20 10 }
		}

		text_label_center = {
			visible = "[SuccessionEventWindow.GetPlayerHeir.IsAtWar]"
			text = "LEGACY_IS_AT_WAR"
		}

		text_label_center = {
			visible = "[Not(SuccessionEventWindow.GetPlayerHeir.GetPlayerHeir.IsValid)]"
			text = "LEGACY_NO_HEIR"
		}

		expand = {}
	}

	type vbox_current_lineage = vbox {
		datacontext = "[SuccessionEventWindow.GetPlayerHeir]"

		portrait_body = {
			blockoverride "status_icons" {}
			blockoverride "opinion_box" {}
			blockoverride "coa" {}
			blockoverride "dead_icon" {}

			blockoverride "portrait_button"
			{
				size = { 250 370 }
			}

			blockoverride "portrait_glow" {}
		}

		hbox_legacy_status = {}

		text_single = {
			text = "LEGACY_NAME"
			default_Format = "#high"
		}

		text_single = {
			text = "LEGACY_LINEAGE_YOU"
		}
	}

	type hbox_legacy_status = hbox {
		spacing = 2

		icon = {
			datacontext = "[LegacyItem.GetCharacter]"
			visible = "[Not(Character.IsAlive)]"
			name = "death"
			size = { 24 24 }
			tooltip = "CHARACTER_DEAD_TOOLTIP"
			texture = "[Character.GetDeathReasonIcon]"
			using = tooltip_se
		}

		widget = {
			visible = "[LegacyItem.GetFoundedHouse.IsValid]"
			name = "house"
			size = { 24 24 }
			tooltip = "LEGACY_FOUNDED_HOUSE"
			using = tooltip_se

			coa_house_microscopic = {
				datacontext = "[LegacyItem.GetFoundedHouse]"
				blockoverride "coa_button" {}
			}
		}

		icon = {
			visible = "[LegacyItem.GetFoundedFaith.IsValid]"
			name = "faith"
			size = { 24 24 }
			texture = "[LegacyItem.GetFoundedFaith.GetIcon]"
			tooltip = "LEGACY_FOUNDED_FAITH"
			using = tooltip_se
		}

		icon = {
			visible = "[And(LegacyItem.GetCharacter.IsAlive, LegacyItem.WasCulturalHead)]"
			name = "cultural_head"
			size = { 24 24 }
			texture = "gfx/interface/icons/icon_culture.dds"
			tooltip = "LEGACY_CULTURAL_HEAD"
			using = tooltip_se
		}

		icon = {
			visible = "[And(Not(LegacyItem.GetCharacter.IsAlive), LegacyItem.WasCulturalHead)]"
			name = "cultural_head_dead"
			size = { 24 24 }
			texture = "gfx/interface/icons/icon_culture.dds"
			tooltip = "LEGACY_CULTURAL_HEAD_DEAD"
			using = tooltip_se
		}

		icon = {
			visible = "[GreaterThanOrEqualTo_CFixedPoint(LegacyItem.GetDread, GetDefine('NCharacter', 'BOLD_LEVEL_INTIMIDATED') )]"
			name = "dreaded"
			size = { 24 24 }
			texture = "gfx/interface/icons/icon_dread.dds"
			tooltip = "LEGACY_DREADED"
			using = tooltip_se
		}

		icon = {
			name = "renowned"
			size = { 24 24 }
			texture = "[GetPrestigeLevelIcon(LegacyItem.GetPrestigeLevel)]"
			tooltip = "LEGACY_RENOWNED"
			using = tooltip_se
		}


		icon = {
			name = "pious"
			size = { 24 24 }
			texture = "[GetPietyLevelIcon(LegacyItem.GetPietyLevel)]"
			tooltip = "LEGACY_PIOUS"
			using = tooltip_se
		}

		icon = {
			name = "lifestyle"
			visible = "[LegacyItem.GetLifestyle.IsValid]"
			size = { 24 24 }
			texture = "[LegacyItem.GetLifestyle.GetIcon]"
			framesize = { 160 160 }

			tooltip = "LEGACY_LIFESTYLE"
			using = tooltip_se

		}

		icon = {
			name = "wars"
			visible = "[LegacyItem.HasFoughtInWar]"
			size = { 24 24 }
			texture = "gfx/interface/icons/character_interactions/declare_war_interaction.dds"
			tooltip = "LEGACY_WARS"
			using = tooltip_se
		}
	}

	type vbox_legacy_item = vbox {
		datacontext = "[LegacyItem.GetCharacter]"
		layoutpolicy_vertical = expanding

		portrait_body = {
			blockoverride "status_icons" {}
			blockoverride "opinion_box" {}
			blockoverride "coa" {}
			blockoverride "dead_icon" {}

			blockoverride "portrait_button"
			{
				size = { 250 370 }
			}
		}

		hbox_legacy_status = {}

		text_single = {
			text = "LEGACY_NAME"
			default_Format = "#high"
		}

		text_single = {
			text = "LEGACY_REIGN"
			tooltip = "LEGACY_REIGN_TT"
		}
	}
}