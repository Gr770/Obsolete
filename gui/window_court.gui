window = {
	name = "court_window"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	allow_outside = yes

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetVariableSystem.Set( 'council_tabs', 'my_council' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 20

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "COURT_WINDOW_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[CourtWindow.Close]"
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					button_tab = {
						layoutpolicy_horizontal = expanding
						text = "COUNCIL_WINDOW_PLAYER_COURT"

						onclick = "[CourtWindow.SetShowCourt]"
						down = "[CourtWindow.IsShowCourt]"
					}

					button_tab = {
						layoutpolicy_horizontal = expanding
						onclick = "[CourtWindow.SetShowPrison]"
						down = "[CourtWindow.IsShowPrison]"

						text_single = {
							text = "INTRIGUE_WINDOW_PRISONERS"
							parentanchor = center

							maximumsize = { 400 -1 }
							default_format = "#low"

							alpha = "[Select_float( GreaterThan_int32(CourtWindow.GetPrisoners.GetTotalNumber, '(int32)0'), '(float)1.0', '(float)0.5' )]"
						}

						text_single = {
							parentanchor = vcenter|right
							position = { -20 0 }
							text = "[CourtWindow.GetPrisoners.GetTotalNumber]"

							default_format = "#low"

							alpha = "[Select_float( GreaterThan_int32(CourtWindow.GetPrisoners.GetTotalNumber, '(int32)0'), '(float)1.0', '(float)0.5' )]"
						}
					}
				}

				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					visible = "[CourtWindow.IsShowCourt]"

					vbox = {
						name = "court"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						scrollbox = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding

							blockoverride "scrollbox_margins" {}

							blockoverride "scrollbox_content"
							{
								spacing = 20
								margin = { 4 10 }

								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 5
									
									datacontext = "[CourtWindow.GetCourtOwner.GetRelationOfType( GetRelation( 'court_physician' ) )]"

									text_label_center = {
										text = "COUNCIL_WINDOW_MINOR_TITLES"
									}

									hbox = {
										layoutpolicy_horizontal = expanding

										background = {
											texture = "gfx/interface/illustrations/event_scenes/study_physician.dds"
											fittype = centercrop
											alpha = 0.5

											using = Mask_Rough_Edges
										}

										portrait_shoulders = {
											background = {
												using = Background_Area
											}
											blockoverride "onclick" {
												datacontext = "[GetDecisionWithKey( 'hire_physician_decision' )]"
												onclick = "[OpenDecisionDetailView( Decision.Self )]"

												button_icon = {
													parentanchor = center
													alwaystransparent = yes
													size = { 40 40 }
													position = {-5 -5}
													texture = "gfx/interface/icons/flat_icons/plus.dds" 
												}
											}
										}

										vbox = {
											layoutpolicy_horizontal = expanding

											text_single = {
												layoutpolicy_horizontal = expanding
												text = "[court_physician|E]"
											}

											text_single = {
												layoutpolicy_horizontal = expanding
												visible = "[Character.IsValid]"
												# [UniUI]
												text = "COURT_WIND_UNIUI_PHYSICIAN_NAME"
												# [/UniUI]
												autoresize = no
											}

											hbox = {
												layoutpolicy_horizontal = expanding
												margin = { 0 10 }

												button_court = {
													name = "hire_physician_decision"
													datacontext = "[GetDecisionWithKey( 'hire_physician_decision' )]"
													visible = "[And( Not( Character.IsValid ), Decision.IsShownForPlayer )]"
													onclick = "[OpenDecisionDetailView( Decision.Self )]"

													size = { 250 40 }
													
													blockoverride "size_illustration" {
														size = { 250 38 }
													}
													
													blockoverride "deb_illustration" {
														visible = no
													}
												}

												expand = {}
											}
										}
									}
								}

								vbox = {
									visible = "[Not(IsDataModelEmpty(GetPlayer.GetCourt))]"
									layoutpolicy_horizontal = expanding
									spacing = 20

									vbox = {
										visible = "[Not(IsDataModelEmpty(CourtWindow.GetAwayCourtiers.GetList))]"
										layoutpolicy_horizontal = expanding

										text_single = {
											text = "COUNCIL_WINDOW_AWAY_COURTIERS"
										}

										vbox = {
											name = "characters_grid"
											datacontext = "[CourtWindow.GetAwayCourtiers]"
											datamodel = "[CharacterSelectionList.GetList]"
											visible = "[Not(CharacterSelectionList.IsBuildingList)]"
											layoutpolicy_horizontal = expanding

											item = {
												# [UniUI]
												# [Vanilla]
												widget_courtier_item = {
													datacontext = "[GetScriptedGui('widget_courtier_item_vanilla')]"
													visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
													layoutpolicy_horizontal = expanding
													datacontext = "[CharacterListItem.GetCharacter]"

													blockoverride "relation_text" {
														text = "[Character.GetRelationToString( GetPlayer.Self )]"
													}

													blockoverride "description_relation_text" {
														text = "[Character.GetRelationToString( GetPlayer.Self )]"
													}
												}
												# [Vanilla]
												# [PoW]
												widget_courtier_item_PoW = {
													datacontext = "[GetScriptedGui('widget_courtier_item_PoW')]"
													visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
													layoutpolicy_horizontal = expanding
													datacontext = "[CharacterListItem.GetCharacter]"

													blockoverride "relation_text" {
														text = "[Character.GetRelationToString( GetPlayer.Self )]"
													}

													blockoverride "description_relation_text" {
														text = "[Character.GetRelationToString( GetPlayer.Self )]"
													}
												}
												# [/PoW]
											}
										}
									}

									hbox = {
										spacing = 10

										button_court = {
											name = "invite_knights_decision"
											datacontext = "[GetDecisionWithKey('invite_knights_decision')]"
											visible = "[Decision.IsShownForPlayer]"

											onclick = "[OpenDecisionDetailView(Decision.Self)]"
											using = tooltip_se

											size = { 210 30 }
										
											blockoverride "size_illustration" {
												size = { 210 28 }
											}
										
											blockoverride "deb_illustration" {
												visible = no
											}
										}

										button_court = {
											name = "invite_claimants_decision"
											datacontext = "[GetDecisionWithKey('invite_claimants_decision')]"
											visible = "[Decision.IsShownForPlayer]"

											onclick = "[OpenDecisionDetailView(Decision.Self)]"
											using = tooltip_se

											size = { 210 30 }
											
											blockoverride "size_illustration" {
												size = { 210 28 }
											}

											blockoverride "deb_illustration" {
												visible = no
											}	
										}
									}

									vbox = {
										layoutpolicy_horizontal = expanding
										spacing = 5


										text_label_center = {
											text = "COUNCIL_WINDOW_GUESTS"
										}

										vbox = {
											layoutpolicy_horizontal = expanding
											datacontext = "[CourtWindow.GetGuests]"

											text_multi = {	
												text = "COURT_WINDOW_NO_GUESTS"
												default_format = "#weak"
												autoresize = yes
												max_width = 400
												visible = "[And(Not(CharacterSelectionList.IsBuildingList), IsDataModelEmpty(CharacterSelectionList.GetList) )]"
											}

											fixedgridbox = {
												name = "characters_grid"
												datamodel = "[CharacterSelectionList.GetList]"
												visible = "[Not(CharacterSelectionList.IsBuildingList)]"
												addcolumn = 530
												addrow = 125
												setitemsizefromcell = yes

												item = {
													widget_courtier_item = {
														datacontext = "[CharacterListItem.GetCharacter]"

														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}
													}
												}
											}
										}
									}

									vbox = {
										layoutpolicy_horizontal = expanding
										spacing = 5

										text_label_center = {
											text = "COUNCIL_WINDOW_COURTIERS"
										}

										vbox = {
											layoutpolicy_horizontal = expanding
											datacontext = "[CourtWindow.GetCourt]"

											fixedgridbox = {
												name = "characters_grid"
												datamodel = "[CharacterSelectionList.GetList]"
												visible = "[Not(CharacterSelectionList.IsBuildingList)]"
												addcolumn = 530
												addrow = 125
												setitemsizefromcell = yes

												item = {
													widget_courtier_item = {
														datacontext = "[CharacterListItem.GetCharacter]"

														blockoverride "description_relation_text" {
															text = "[Character.GetRelationToString( GetPlayer.Self )]"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}

				## PRISONERS
				vbox = {
					datacontext = "[CourtWindow.GetPrisoners]"
					visible = "[CourtWindow.IsShowPrison]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}

					text_single = {
						visible = "[LessThanOrEqualTo_int32( CharacterSelectionList.GetTotalNumber, '(int32)0' )]"
						text = "PRISON_EMPTY"
						default_format = "#weak"
					}

					background = {
						visible = "[LessThanOrEqualTo_int32( CharacterSelectionList.GetTotalNumber, '(int32)0' )]"
						texture = "gfx/interface/skinned/illustrations/dungeon.dds"
						margin = { -5 0 }
						fittype = centercrop
						framesize = { 700 800 }
						frame = 2

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
							blend_mode = alphamultiply
						}
					}

					background = {
						visible = "[GreaterThan_int32( CharacterSelectionList.GetTotalNumber, '(int32)4' )]"
						texture = "gfx/interface/skinned/illustrations/dungeon.dds"
						margin = { -5 0 }
						fittype = end
						alpha = 0.4

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
							blend_mode = alphamultiply
						}
					}

					## Layout with more than MAX_PRISONER_COUNT_GRID(4) prisoners
					vbox_character_list = {
						visible = "[GreaterThan_int32( CourtWindow.GetPrisoners.GetTotalNumber, GetDefine( 'NGui', 'MAX_PRISONER_COUNT_GRID' ) )]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "container_implementation"
						{
							fixedgridbox = {
								name = "characters_grid"
								datamodel = "[CharacterSelectionList.GetList]"
								visible = "[Not(CharacterSelectionList.IsBuildingList)]"
								layoutpolicy_horizontal = expanding
								addcolumn = 520
								addrow = 167
								datamodel_reuse_widgets = yes

								item = {
									vbox = {
										maximumsize = { 520 167 }

										widget_character_list_item_finder = {
											layoutpolicy_horizontal = expanding
											blockoverride "divider" {}
											blockoverride "character_relation" {}
										}

										# [UniUI]
										# [Vanilla]
										window_court_prisoner_list_vanilla = {
											datacontext = "[GetScriptedGui('window_court_prisoner_list_vanilla')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										}
										# [/Vanilla]
										# [PoW]
										window_court_prisoner_list_PoW = {
											datacontext = "[GetScriptedGui('window_court_prisoner_list_PoW')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										}
										# [/PoW]
										# [/UniUI]

									}
								}
							}
						}

						blockoverride "bottom_bar"
						{
							hbox = {
								margin = { 10 0 }
								spacing = 3

								text_single = {
									text = "MASS_PRISONER_ACTIONS"
									default_format = "#low"
									align = nobaseline
								}

								spacer = {
									size = { 5 5 }
								}

								button_round  = {
									name = "ransom"
									enabled = "[CourtWindow.CanDoMassPrisonerAction('ransom')]"

									button_prison_ransom = {
										parentanchor = center
										onclick = "[CourtWindow.MassPrisonerAction('ransom')]"
										tooltip = "[CourtWindow.GetMassPrisonerActionTooltip('ransom')]"
										using = tooltip_se
									}
								}

								button_round  = {
									name = "release"
									enabled = "[CourtWindow.CanDoMassPrisonerAction('release')]"

									button_prison_release = {
										parentanchor = center
										onclick = "[CourtWindow.MassPrisonerAction('release')]"
										tooltip = "[CourtWindow.GetMassPrisonerActionTooltip('release')]"
										using = tooltip_se
									}
								}

								button_round  = {
									name = "execute"
									enabled = "[CourtWindow.CanDoMassPrisonerAction('execute')]"

									button_prison_execute = {
										parentanchor = center
										onclick = "[CourtWindow.MassPrisonerAction('execute')]"
										tooltip = "[CourtWindow.GetMassPrisonerActionTooltip('execute')]"
										using = tooltip_se
									}
								}
							}
						}
					}

					## Layout with MAX_PRISONER_COUNT_GRID(4) or fewer prisoners
					vbox = {
						visible = "[And( GreaterThan_int32( CourtWindow.GetPrisoners.GetTotalNumber, '(int32)0' ), LessThanOrEqualTo_int32( CourtWindow.GetPrisoners.GetTotalNumber, GetDefine( 'NGui', 'MAX_PRISONER_COUNT_GRID' ) ) )]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin = { 15 15 }

						fixedgridbox = {
							datamodel = "[CharacterSelectionList.GetList]"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							addcolumn = 262
							addrow = 405
							datamodel_wrap = 2
							flipdirection = yes
							#setitemsizefromcell = yes

							item = {
								# [UniUI]
								# [Vanilla]
								window_court_prisoner_short_list_vanilla = {
									datacontext = "[GetScriptedGui('window_court_prisoner_short_list_vanilla')]"
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
								}
								# [/Vanilla]
								# [PoW]
								window_court_prisoner_short_list_PoW = {
									datacontext = "[GetScriptedGui('window_court_prisoner_short_list_PoW')]"
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
								}
								# [/PoW]
							}
						}
					}
				}
			}
		}
	}

	window_character_filter = {
		datacontext = "[CourtWindow.GetPrisoners]"
		blockoverride "addition_filter" {

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('age_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('politics_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('claim_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('personal_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hook_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('married_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('health_filter')]"
					}
				}
			}

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
			}
		}
	}
}
